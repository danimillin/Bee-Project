{
    "collab_server" : "",
    "contents" : "#set wd \nsetwd(\"/Users/israel/Desktop/OneDrive - Lawrence University/Biogeography 420/Labs/Lab 5\")\nlibrary (dismo); library(raster);library(rgdal);library (sp);\nlibrary (maptools); library (mgcv); library (gbm)\n\nxy<-read.csv ('V_lagopes_xy.csv')\nxy<-xy[,c(3,2)]\nduplicated (xy)\n\n#lets remove any duplicate entries why should we do this? \nxy<-xy[!duplicated(xy), ]\nduplicated (xy)\nstr (xy)\n\n#load a simple world map from maptools \ndata (\"wrld_simpl\")\n\nplot (wrld_simpl, xlim=c(-180, -50), ylim=c(23,90), axes=T, col=\"lightgrey\")\npoints (data=xy, x=xy$longitude, y=xy$latitude, col=\"red\", pch=16)\n\n#creating a background dataset: This is NOT an absence dataset, it simply characterisez the ambient conditionso of the species extent \n\n#read in our predictor rasters and stack em' \ntemp<-raster (\"bio1.bil\")\ntemp_cm<- raster (\"bio6.bil\")\nprecip<- raster (\"bio12.bil\")\nprecip_wq<- raster (\"bio13.bil\")\n\npredictors<-stack ( temp, temp_cm, precip, precip_wq)\n\n#crop the stack \npredictors_crop<- crop (predictors,  extent(-180,-50,23,80))\nplot (predictors_crop)\n\n# we use the first file to create a RasterLayer\nplot(predictors_crop[[1]]) \nmask <- raster(predictors_crop[[1]])\nmask\n\n# select 500 random points\n# set seed to assure that the examples will always have the same random sample.\nset.seed(1963)\nbg <- randomPoints(mask, 500 )\nhead (bg)\nstr (bg)\n\n# set up the plotting area\nplot(!is.na(mask), legend=FALSE)\npoints(bg, cex=0.5)\n# now we repeat the sampling, but limit\n# the area of sampling using a spatial extent\ne <- extent(-180, -50, 23, 80)\nbg2 <- randomPoints(mask, 50, ext=e)\nplot(!is.na(mask), legend=FALSE)\nplot(e, add=TRUE, col=\"red\")\npoints(bg2, cex=0.5)\n\nplot (wrld_simpl, xlim=c(-180, -50), ylim=c(23,90), axes=T, col=\"lightgrey\")\npoints (data=xy, x=xy$longitude, y=xy$latitude, col=\"red\", pch=16, cex=.5)\npoints (bg, pch=16, col=\"blue\", cex=.25)\n\n#We can now use the extract function as we did before to mine data from each of these geographic locations: \n#presences\npresvals <- extract(predictors_crop, xy)\npresvals <- na.omit (presvals) #gets rid of any observations with no data \n#psuedo-absences\nabsvals <- extract(predictors_crop, bg)\nabsvals <- na.omit (absvals) #gets rid of any observations with no data \n\n#combine presences and absences into a single dataframe \npb <- c(rep(1, nrow(presvals)), rep(0, nrow(absvals)))\nsdmdata <- data.frame(cbind(pb, rbind(presvals, absvals)))\nhead(sdmdata)\n\n#investigate co-linearity: Are these predictors telling us the same thing? \npairs (sdmdata [,2:5], cex=.25, fig=TRUE)\n\n#When two variables are strongly correlated it is best to run the model with only one of them, unless you have a strong biological reason to not do this \n\n#now our dataset is readly lets fit our first model (Chapter 5 in SDM)\n#lets start with a simple Generalized Linear Model (glm)\nm1 <- glm(pb ~ bio1 + bio12 + bio13, data=sdmdata)\nsummary (m1)\nresponse(m1)\n\n\n#with our model built we can now predict to the entire study extent: \nglm_pred<- predict (predictors_crop, m1)\nplot (glm_pred, col=rev(rainbow(50)), main=\"GLM\")# This now plots the habitat suitability for this species \n\n#evaluate the model \nmE1 <- evaluate(xy, bg, x= predictors_crop , m1)\nmE1\n\n#Apply a threshold to convert to a binary map:\n?threshold\ntr <- threshold(mE1,'spec_sens')\ntr\ncurrent_pa<- (glm_pred > tr)\nplot(glm_pred > tr, main='presence/absence')\n#how does this map change if we change the threshold type from spec_sens to the other thresholds? \n\n#lets now construct a generalized additive model (gam)\nlibrary (mgcv)\nm2<-gam(pb ~ bio1 * bio12 * bio13, data=sdmdata)\nsummary (m2)\nresponse(m2)\ngam_pred<- predict (predictors_crop, m2)\nplot (gam_pred, col=rev(rainbow(50)), main=\"GAM\") \n\n\n#Begin Lab 5 here: \n#project our models to a future climate \n#load in rasters and stack them: \n#Important to make sure the files in your future stack are the named the same as your predictor variables \nbio1f<-raster (\"bio1.tif\")\nbio12f<- raster(\"bio12.tif\")\nbio13f<- raster(\"bio13.tif\")\n\nfuture_stack<-stack (bio1f, bio12f, bio13f)\nplot (future_stack)\n\n#lets clip it to our study extent: \nfuture_crop<- crop (future_stack,  extent(-180,-50,23,80))\nplot (future_crop)\n\n#now all we do is project our models (m1 and m2) to the future stack! \nsummary (m1)\nsummary (m2)\n\nglm_future<- predict (future_crop, m1)\n\n#you can also apply teh threshold as you before to create a presence absence map \nglm_future_bi<-glm_future > tr\nplot (glm_future_bi)\n\n#now plot them\n\npar(mfrow=c(2,2)) \nplot (glm_pred, main=\"2017 Distribution\")\nplot (glm_future, main=\"2070 RCP 8.5\")\n\n#using raster math we can calculate the differences between the two maps \ndiff_map<- glm_future-glm_pred\nplot (diff_map, col=heat.colors(100), main=\"Difference Map\")\n\ndiff_pa_map<- glm_future_bi - current_pa\nplot (diff_pa_map, col=heat.colors(100), main=\"Difference Map P/A\")\n\n#How would these patterns change if you changed the input scenarios to less dramatic options? \n#BOOM SHAKA-LAKA \n\n#Lets try a more advanced modeling algorithm: Boosted Regression Trees\nhead (sdmdata)\nsummary (sdmdata)\npar(mfrow=c(1,1)) \nvulpes_brt<- gbm.step (data=sdmdata, gbm.x= 2:5, gbm.y = 1,\n                       family = \"bernoulli\", tree.complexity = 5,                        \n                        learning.rate = 0.01, bag.fraction = 0.5)\n#show us the importance of each variable in the model \nsummary (vulpes_brt)  \n\n#Plot out the response curves \ngbm.plot (vulpes_brt, n.plots= 4)\n  \n#compare these fitted curves with those of the glm: Whats the differences? \nresponse(m1)\n\n#evaluate the model \npres <- sdmdata[sdmdata[,1]==1, 1]\nabs <- sdmdata[sdmdata[,1]==0, 1]\ne <- evaluate(p=pres, a=abs)\ne\n\n#now use the same predict functions to get the current ranges and future ranges \nbrt_pred<- predict(predictors_crop,vulpes_brt,  \n                    n.trees=vulpes_brt$gbm.call$best.trees, type=\"response\")\nplot (brt_pred)\n\n#evaluate a threshold \nbrt_tr = 0.5\nplot(brt_pred >brt_tr, main='BRT presence/absence')\n\nbio1f<-raster (\"bio1.tif\")\nbio6f<-raster (\"bio6.tif\")\nbio12f<- raster(\"bio12.tif\")\nbio13f<- raster(\"bio13.tif\")\n\nfuture_stack<-stack (bio1f, bio6f, bio12f, bio13f)\n\n#lets clip it to our study extent: \nfuture_crop<- crop (future_stack,  extent(-180,-50,23,80))\n\n#now project to a stack of future conditions \nbrt_future<- predict(future_crop,vulpes_brt,  \n                   n.trees=vulpes_brt$gbm.call$best.trees, type=\"response\")\n\nplot (brt_future, main=\"2070 BRT RCP 8.5\")\n\npar(mfrow=c(2,2)) \nplot (brt_pred, main=\"2017 Distribution\")\nplot (brt_future, main=\"2070 BRT RCP 8.5\")\n\n#using raster math we can calculate the differences between the two maps \ndiff_map_brt<- brt_future-brt_pred\nplot (diff_map_brt, col=heat.colors(100), main=\"Difference Map\")\n\n#Fill in the blank how do we project the binary presence absence maps! \ndiff_map_brt_pa<- (brt_future > brt_tr) - (brt_pred > brt_tr) \nplot (diff_map_brt_pa)\n",
    "created" : 1487705134591.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3954749289",
    "id" : "3A326B7E",
    "lastKnownWriteTime" : 1487702073,
    "last_content_update" : 1487705672644,
    "path" : "~/Geography of Life/lab5/Lab 5.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}